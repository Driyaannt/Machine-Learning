{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"gpuType":"T4","authorship_tag":"ABX9TyNfjeAsB9CoHFO5hxkLQfOP"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","source":["## Praktikum 1\n","\n","Klasifikasi üê± dan üê∂\n","\n","- Deskripsi\n","\n","Pada praktikum ini kita akan membuat model klasifikasi CNN sederhana pada kasus citra kucing dan anjing."],"metadata":{"id":"_8RHIORUElvv"}},{"cell_type":"code","execution_count":1,"metadata":{"id":"E4rp7btOEQ_0","executionInfo":{"status":"ok","timestamp":1699924543193,"user_tz":-420,"elapsed":24391,"user":{"displayName":"Driya Ananta","userId":"05384161180466935325"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"36aca1c4-7196-446e-c77c-0b934671065c"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["import tensorflow as tf\n","from keras.preprocessing.image import ImageDataGenerator\n","from google.colab import drive\n","from PIL import Image\n","\n","drive.mount('/content/drive')"]},{"cell_type":"markdown","source":["### Langkah 2 - Pra Pengolahan Data\n","\n","Pada tahap ini kita akan sedikit melakukan manipulasi pada citra yang digunakan. Manipulasi yang dilakukan diantaranya adalah normalisasi nilai piksel, koreksi kemiringan, pembesaran (zoom), dan flip."],"metadata":{"id":"RzmsqPr7HEj8"}},{"cell_type":"markdown","source":["### Langkah 2.1. Pra Pengolahan Data Training"],"metadata":{"id":"PezvDLxdHJYQ"}},{"cell_type":"code","source":["train_datagen = ImageDataGenerator(rescale = 1./255,\n","                                   shear_range = 0.2,\n","                                   zoom_range = 0.2,\n","                                   horizontal_flip = True)\n","training_set = train_datagen.flow_from_directory('/content/drive/MyDrive/images/ML/week11/dataset',\n","                                                 target_size = (64, 64),\n","                                                 batch_size = 32,\n","                                                 class_mode = 'binary')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GCijm5AuHG1W","executionInfo":{"status":"ok","timestamp":1699924568656,"user_tz":-420,"elapsed":25466,"user":{"displayName":"Driya Ananta","userId":"05384161180466935325"}},"outputId":"ea46ca5b-6ed0-430c-b8ec-19831b6f7c57"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Found 10344 images belonging to 3 classes.\n"]}]},{"cell_type":"markdown","source":["Langkah 2.2. Pra Pengolahan Data Testing"],"metadata":{"id":"gJHr07URMe4X"}},{"cell_type":"code","source":["test_datagen = ImageDataGenerator(rescale = 1./255)\n","test_set = test_datagen.flow_from_directory('/content/drive/MyDrive/images/ML/week11/dataset/test_set',\n","                                            target_size = (64, 64),\n","                                            batch_size = 32,\n","                                            class_mode = 'binary')"],"metadata":{"id":"LIvd5KAYHMSg","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1699924568657,"user_tz":-420,"elapsed":19,"user":{"displayName":"Driya Ananta","userId":"05384161180466935325"}},"outputId":"6f93fda1-96f9-43ad-b7ea-ff63377236b4"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Found 2000 images belonging to 2 classes.\n"]}]},{"cell_type":"markdown","source":["### Langkah 3 - Pembuatan Model CNN"],"metadata":{"id":"OVpm3xaNVIdj"}},{"cell_type":"markdown","source":["###Langkah 3.1.  - Inisiasi Model CNN"],"metadata":{"id":"-8dwzNjpVPVm"}},{"cell_type":"code","source":["cnn = tf.keras.models.Sequential()"],"metadata":{"id":"dy15_VaPU5Ke","executionInfo":{"status":"ok","timestamp":1699924571252,"user_tz":-420,"elapsed":2611,"user":{"displayName":"Driya Ananta","userId":"05384161180466935325"}}},"execution_count":4,"outputs":[]},{"cell_type":"markdown","source":["####Langkah 3.2. - Pembuatan Layer Konvolusi 1"],"metadata":{"id":"ZNzZov1TVXwr"}},{"cell_type":"code","source":["cnn.add(tf.keras.layers.Conv2D(filters=32, kernel_size=3, activation='relu', input_shape=[64, 64, 3]))"],"metadata":{"id":"FTXqeXm0VTqb","executionInfo":{"status":"ok","timestamp":1699924571252,"user_tz":-420,"elapsed":9,"user":{"displayName":"Driya Ananta","userId":"05384161180466935325"}}},"execution_count":5,"outputs":[]},{"cell_type":"markdown","source":["####Langkah 3.3 - Pembuatan Layer Pooling 1"],"metadata":{"id":"mQD2m-sdVhBB"}},{"cell_type":"code","source":["cnn.add(tf.keras.layers.MaxPool2D(pool_size=2, strides=2))"],"metadata":{"id":"jmlqcAffVdq_","executionInfo":{"status":"ok","timestamp":1699924571252,"user_tz":-420,"elapsed":8,"user":{"displayName":"Driya Ananta","userId":"05384161180466935325"}}},"execution_count":6,"outputs":[]},{"cell_type":"markdown","source":["#### Langkah 3.4 - Pembuatan Layer Konvolusi 2 dan Pooling 2"],"metadata":{"id":"oGcGUk_ZVmgc"}},{"cell_type":"code","source":["cnn.add(tf.keras.layers.Conv2D(filters=32, kernel_size=3, activation='relu'))\n","cnn.add(tf.keras.layers.MaxPool2D(pool_size=2, strides=2))"],"metadata":{"id":"TjVbLCU7VkCU","executionInfo":{"status":"ok","timestamp":1699924571253,"user_tz":-420,"elapsed":8,"user":{"displayName":"Driya Ananta","userId":"05384161180466935325"}}},"execution_count":7,"outputs":[]},{"cell_type":"markdown","source":["####Langkah 3.5 - Flattening"],"metadata":{"id":"mPXIjXaWVsbv"}},{"cell_type":"code","source":["cnn.add(tf.keras.layers.Flatten())"],"metadata":{"id":"qUaEQdHSVpMI","executionInfo":{"status":"ok","timestamp":1699924571253,"user_tz":-420,"elapsed":8,"user":{"displayName":"Driya Ananta","userId":"05384161180466935325"}}},"execution_count":8,"outputs":[]},{"cell_type":"markdown","source":["#### Langkah 3.6 - Fully Connected Layer 1 (Input)"],"metadata":{"id":"Xt2zIHv6V1qd"}},{"cell_type":"code","source":["cnn.add(tf.keras.layers.Dense(units=128, activation='relu'))"],"metadata":{"id":"MCMir1i9Vv2C","executionInfo":{"status":"ok","timestamp":1699924571253,"user_tz":-420,"elapsed":8,"user":{"displayName":"Driya Ananta","userId":"05384161180466935325"}}},"execution_count":9,"outputs":[]},{"cell_type":"markdown","source":["#### Langkah 3.7 - Fully Connected Layer 2 (Output)"],"metadata":{"id":"VDRNtuLoV7oy"}},{"cell_type":"code","source":["cnn.add(tf.keras.layers.Dense(units=1, activation='sigmoid'))"],"metadata":{"id":"wSbowGRiV6z8","executionInfo":{"status":"ok","timestamp":1699924571253,"user_tz":-420,"elapsed":7,"user":{"displayName":"Driya Ananta","userId":"05384161180466935325"}}},"execution_count":10,"outputs":[]},{"cell_type":"markdown","source":["#### Langkah 3.8 - Compile Model CNN"],"metadata":{"id":"lR9ZDOjMWLEG"}},{"cell_type":"code","source":["cnn.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])"],"metadata":{"id":"fzaKxNMbWFIR","executionInfo":{"status":"ok","timestamp":1699924571253,"user_tz":-420,"elapsed":7,"user":{"displayName":"Driya Ananta","userId":"05384161180466935325"}}},"execution_count":11,"outputs":[]},{"cell_type":"markdown","source":["Penggunaan loss function binary crossentropy dikarenakan kita hanya melakukan klasifikasi pada dua kelas, yaitu kucing dan anjing."],"metadata":{"id":"OoS5D_irWTYP"}},{"cell_type":"markdown","source":["####Langkah 4 - Fit CNN"],"metadata":{"id":"ZGkKfrN0XIfa"}},{"cell_type":"code","source":["cnn.fit(x = training_set, validation_data = test_set, epochs = 25)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"M0H1ndCRWOFd","executionInfo":{"status":"ok","timestamp":1699929042909,"user_tz":-420,"elapsed":4471663,"user":{"displayName":"Driya Ananta","userId":"05384161180466935325"}},"outputId":"036e6cc1-2424-49b7-f7d6-677fab33f38a"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/25\n","324/324 [==============================] - 2997s 9s/step - loss: -53088612.0000 - accuracy: 0.1933 - val_loss: 183931824.0000 - val_accuracy: 0.5000\n","Epoch 2/25\n","324/324 [==============================] - 49s 151ms/step - loss: -2194962176.0000 - accuracy: 0.1933 - val_loss: 3622784512.0000 - val_accuracy: 0.5000\n","Epoch 3/25\n","324/324 [==============================] - 51s 158ms/step - loss: -15558109184.0000 - accuracy: 0.1933 - val_loss: 18261843968.0000 - val_accuracy: 0.5000\n","Epoch 4/25\n","324/324 [==============================] - 48s 149ms/step - loss: -55420899328.0000 - accuracy: 0.1933 - val_loss: 54713565184.0000 - val_accuracy: 0.5000\n","Epoch 5/25\n","324/324 [==============================] - 51s 157ms/step - loss: -139847598080.0000 - accuracy: 0.1933 - val_loss: 124288712704.0000 - val_accuracy: 0.5000\n","Epoch 6/25\n","324/324 [==============================] - 48s 149ms/step - loss: -287158009856.0000 - accuracy: 0.1933 - val_loss: 238253785088.0000 - val_accuracy: 0.5000\n","Epoch 7/25\n","324/324 [==============================] - 48s 149ms/step - loss: -515571712000.0000 - accuracy: 0.1933 - val_loss: 407643455488.0000 - val_accuracy: 0.5000\n","Epoch 8/25\n","324/324 [==============================] - 48s 150ms/step - loss: -842338336768.0000 - accuracy: 0.1933 - val_loss: 643396337664.0000 - val_accuracy: 0.5000\n","Epoch 9/25\n","324/324 [==============================] - 50s 156ms/step - loss: -1285081530368.0000 - accuracy: 0.1933 - val_loss: 954956906496.0000 - val_accuracy: 0.5000\n","Epoch 10/25\n","324/324 [==============================] - 48s 149ms/step - loss: -1861548244992.0000 - accuracy: 0.1933 - val_loss: 1354221223936.0000 - val_accuracy: 0.5000\n","Epoch 11/25\n","324/324 [==============================] - 49s 151ms/step - loss: -2587347910656.0000 - accuracy: 0.1933 - val_loss: 1850214711296.0000 - val_accuracy: 0.5000\n","Epoch 12/25\n","324/324 [==============================] - 52s 162ms/step - loss: -3475620495360.0000 - accuracy: 0.1933 - val_loss: 2451726925824.0000 - val_accuracy: 0.5000\n","Epoch 13/25\n","324/324 [==============================] - 53s 164ms/step - loss: -4542755241984.0000 - accuracy: 0.1933 - val_loss: 3170528919552.0000 - val_accuracy: 0.5000\n","Epoch 14/25\n","324/324 [==============================] - 51s 158ms/step - loss: -5812591263744.0000 - accuracy: 0.1933 - val_loss: 4015672786944.0000 - val_accuracy: 0.5000\n","Epoch 15/25\n","324/324 [==============================] - 49s 151ms/step - loss: -7294594056192.0000 - accuracy: 0.1933 - val_loss: 5000603369472.0000 - val_accuracy: 0.5000\n","Epoch 16/25\n","324/324 [==============================] - 51s 157ms/step - loss: -9008124526592.0000 - accuracy: 0.1933 - val_loss: 6132410613760.0000 - val_accuracy: 0.5000\n","Epoch 17/25\n","324/324 [==============================] - 49s 150ms/step - loss: -10968325160960.0000 - accuracy: 0.1933 - val_loss: 7422494113792.0000 - val_accuracy: 0.5000\n","Epoch 18/25\n","324/324 [==============================] - 48s 148ms/step - loss: -13201851809792.0000 - accuracy: 0.1933 - val_loss: 8883700498432.0000 - val_accuracy: 0.5000\n","Epoch 19/25\n","324/324 [==============================] - 55s 170ms/step - loss: -15718857834496.0000 - accuracy: 0.1933 - val_loss: 10524675801088.0000 - val_accuracy: 0.5000\n","Epoch 20/25\n","324/324 [==============================] - 48s 149ms/step - loss: -18546048368640.0000 - accuracy: 0.1933 - val_loss: 12359241302016.0000 - val_accuracy: 0.5000\n","Epoch 21/25\n","324/324 [==============================] - 49s 152ms/step - loss: -21674286120960.0000 - accuracy: 0.1933 - val_loss: 14398995300352.0000 - val_accuracy: 0.5000\n","Epoch 22/25\n","324/324 [==============================] - 52s 161ms/step - loss: -25172362919936.0000 - accuracy: 0.1933 - val_loss: 16656108617728.0000 - val_accuracy: 0.5000\n","Epoch 23/25\n","324/324 [==============================] - 48s 148ms/step - loss: -28996746084352.0000 - accuracy: 0.1933 - val_loss: 19140041506816.0000 - val_accuracy: 0.5000\n","Epoch 24/25\n","324/324 [==============================] - 52s 159ms/step - loss: -33233951522816.0000 - accuracy: 0.1933 - val_loss: 21872829792256.0000 - val_accuracy: 0.5000\n","Epoch 25/25\n","324/324 [==============================] - 48s 148ms/step - loss: -37898648813568.0000 - accuracy: 0.1933 - val_loss: 24856076746752.0000 - val_accuracy: 0.5000\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.src.callbacks.History at 0x7d9ad79f8ca0>"]},"metadata":{},"execution_count":12}]},{"cell_type":"markdown","source":["####langkah 5 - Prediksi dengan 1 Citra\n","Pada langkah ini, kita akan mencoba melakukan prediksi pada 1 citra anjing dan kucing."],"metadata":{"id":"-Z7XWk7SYMcd"}},{"cell_type":"code","source":["import numpy as np\n","from keras.preprocessing import image\n","test_image = image.load_img('/content/drive/MyDrive/images/ML/week11/dataset/single_prediction/cat_or_dog_1.jpg', target_size = (64, 64))\n","test_image = image.img_to_array(test_image)\n","test_image = np.expand_dims(test_image, axis = 0)\n","result = cnn.predict(test_image)\n","training_set.class_indices\n","if result[0][0] == 1:\n","  prediction = 'dog'\n","else:\n","  prediction = 'cat'"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RlG3f-aMYHFz","executionInfo":{"status":"ok","timestamp":1699929042910,"user_tz":-420,"elapsed":9,"user":{"displayName":"Driya Ananta","userId":"05384161180466935325"}},"outputId":"ecb8142f-b0c1-497d-b937-2e5d1cd2da29"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 136ms/step\n"]}]}]}